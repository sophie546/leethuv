import java.util.HashSet;
import java.util.Set;

class Solution {
    public long countOfSubstrings(String word, int k) {
        Set<Character> vowels = Set.of('a', 'e', 'i', 'o', 'u');
        int[] vowelFreq = new int[128]; 
        int left = 0, consonantCount = 0, uniqueVowels = 0, extraValidStart = 0;
        long result = 0;

        for (int right = 0; right < word.length(); right++) {
            char rightChar = word.charAt(right);

         
            if (vowels.contains(rightChar)) {
                if (++vowelFreq[rightChar] == 1) uniqueVowels++;
            } else {
                consonantCount++;
            }

           
            while (consonantCount > k) {
                char leftChar = word.charAt(left);
                if (vowels.contains(leftChar)) {
                    if (--vowelFreq[leftChar] == 0) uniqueVowels--; 
                } else {
                    consonantCount--;
                }
                left++;
                extraValidStart = 0;
            }

          
            while (uniqueVowels == 5 && consonantCount == k && vowels.contains(word.charAt(left)) && vowelFreq[word.charAt(left)] > 1) {
                extraValidStart++;
                vowelFreq[word.charAt(left)]--;
                left++;
            }

           
            if (uniqueVowels == 5 && consonantCount == k) {
                result += (1 + extraValidStart);
            }
        }

        return result;
    }
}